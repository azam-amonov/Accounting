// <auto-generated />
using System;
using MicrosAccounting.Api.Brokers.StorageBrokers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MicrosAccounting.Api.Migrations
{
    [DbContext(typeof(StorageBroker))]
    [Migration("20240408042955_Add Seed Data")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MicrosAccounting.Api.Models.Categories.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Accounting")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc2ab154-aa13-481f-8112-87600cca4479"),
                            Accounting = 0,
                            Name = "Salary"
                        },
                        new
                        {
                            Id = new Guid("3f4d326a-e03a-47aa-ae85-0daf6b87d04d"),
                            Accounting = 0,
                            Name = "Other Income"
                        },
                        new
                        {
                            Id = new Guid("28014daa-db65-430d-a746-59f722c82a1c"),
                            Accounting = 1,
                            Name = "Food"
                        },
                        new
                        {
                            Id = new Guid("5217136e-25c8-428e-9996-591587d824e4"),
                            Accounting = 1,
                            Name = "Transport"
                        },
                        new
                        {
                            Id = new Guid("6398fa09-91b1-485f-b701-b8363f54c5b3"),
                            Accounting = 1,
                            Name = "Mobile Connection"
                        },
                        new
                        {
                            Id = new Guid("f6424788-1f1b-4271-ad2d-12039a0bf202"),
                            Accounting = 1,
                            Name = "Internet"
                        },
                        new
                        {
                            Id = new Guid("90feb77d-fdd6-4bfe-afa9-257c43a8159e"),
                            Accounting = 1,
                            Name = "Entertainment"
                        });
                });

            modelBuilder.Entity("MicrosAccounting.Api.Models.Transactions.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccountingType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("MicrosAccounting.Api.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MicrosAccounting.Api.Models.Transactions.Transaction", b =>
                {
                    b.HasOne("MicrosAccounting.Api.Models.Categories.Category", null)
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MicrosAccounting.Api.Models.Users.User", null)
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MicrosAccounting.Api.Models.Categories.Category", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("MicrosAccounting.Api.Models.Users.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
