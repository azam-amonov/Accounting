// <auto-generated />
using System;
using MicrosAccounting.Api.Brokers.StorageBrokers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MicrosAccounting.Api.Migrations
{
    [DbContext(typeof(StorageBroker))]
    [Migration("20240408051025_Add Null Type")]
    partial class AddNullType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MicrosAccounting.Api.Models.Categories.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Accounting")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a99ed58-54fc-4c2d-b68d-f0f8c96f88c8"),
                            Accounting = 0,
                            Name = "Salary"
                        },
                        new
                        {
                            Id = new Guid("71577dac-0a17-4a58-8285-7fdc5c008b4e"),
                            Accounting = 0,
                            Name = "Other Income"
                        },
                        new
                        {
                            Id = new Guid("0ca6c0a4-2a85-4b88-9c42-2fb86334b1ed"),
                            Accounting = 1,
                            Name = "Food"
                        },
                        new
                        {
                            Id = new Guid("ed29109f-27df-43f5-b40d-8b2d12da3738"),
                            Accounting = 1,
                            Name = "Transport"
                        },
                        new
                        {
                            Id = new Guid("e1b10d79-d2e0-40bf-86d2-f7f05b868e66"),
                            Accounting = 1,
                            Name = "Mobile Connection"
                        },
                        new
                        {
                            Id = new Guid("ccabf5d2-4ad2-46c8-bd73-3d391f7ff918"),
                            Accounting = 1,
                            Name = "Internet"
                        },
                        new
                        {
                            Id = new Guid("ba0c060a-2c9d-441d-837c-40aaaebd30a3"),
                            Accounting = 1,
                            Name = "Entertainment"
                        });
                });

            modelBuilder.Entity("MicrosAccounting.Api.Models.Transactions.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccountingType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("MicrosAccounting.Api.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MicrosAccounting.Api.Models.Transactions.Transaction", b =>
                {
                    b.HasOne("MicrosAccounting.Api.Models.Categories.Category", null)
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MicrosAccounting.Api.Models.Users.User", null)
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MicrosAccounting.Api.Models.Categories.Category", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("MicrosAccounting.Api.Models.Users.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
